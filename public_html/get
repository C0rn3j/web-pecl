<?php // -*- PHP -*-
/*
Pear package downloader
Usage:
// to get the lastest version of the HTTP_Upload package
pear install http://pear.php.net/get/HTTP_Upload
// to get the version 1.2 of the HTTP_Upload package
pear install http://pear.php.net/get/HTTP_Upload/1.2

cmd structure:
/PEAR_package
/PEAR_package/version

other things like: "/PEAR_package/info" could be easily implemented

It requires this to be added to httpd.conf/.htaccess:
<Location "/get">
ForceType application/x-httpd-php
</Location>
*/

// shut up or we risk getting corrupted tgz files
error_reporting(0);

function error_404($obj) {
    header('HTTP/1.0 404 Not Found');
	if (is_object($obj)) {
		echo $obj->getMessage();
		if (DEVBOX) {
			echo ' ' . $obj->getDebugInfo();
		}
	} else {
		print $obj;
	}
    exit;
}

PEAR::setErrorHandling(PEAR_ERROR_CALLBACK, 'error_404');

// This is needed to be able to test the downloads with "wget"
// ot the pear installer
if (empty($dbh)) {
    $dbh = DB::connect(PEAR_DATABASE_DSN, array('persistent' => true));
}

if (!isset($_SERVER['PATH_INFO']) || $_SERVER['PATH_INFO'] == '/') {
    PEAR::raiseError('no package selected');
}
$opts = explode('/', $_SERVER['PATH_INFO']);
$ok = false;
if (isset($_GET['uncompress']) && in_array($_GET['uncompress'], array('1', 'yes', 'on'))) {
    $uncompress = true;
} else {
    $uncompress = false;
}
switch (sizeof($opts)) {
	case 2: {
		if (preg_match('/^([a-zA-Z0-9_]+)-(.*)\.(tar|tgz)$/', $opts[1], $matches)) {
			list(, $package, $version) = $matches;
			$ok = release::HTTPdownload($package, $version, $opts[1], $uncompress);
		} else {
			$ok = release::HTTPdownload($opts[1], null, null, $uncompress);
		}
		break;
	}
	case 3: {
		$ok = release::HTTPdownload($opts[1], $opts[2], null, $uncompress);
		break;
	}
	default: {
		$ok = false;
	}
}

?>