<?xml version='1.0' encoding='ISO-8859-1' ?>
<!-- $Id: pearfaq.xml,v 1.7 2001-09-01 10:25:55 mj Exp $ -->
<!DOCTYPE book PUBLIC "-//Norman Walsh//DTD DocBk XML V1.7//EN"
          "./dbxml/docbookx.dtd">

<book>

<article class="faq">
<artheader>
    <title>PEAR-Developer FAQ</title>
    <date>$Date: 2001-09-01 10:25:55 $</date>
</artheader>

<qandaset>
    <qandaentry>
        <question>
            <para>
                How to become a PEAR contributer and/or CVS access to PEAR?
            </para>
        </question>
        <answer>
            <author name="Alexander Merz"/>
            <para>
                The rules are the same like getting a PHP CVS account. This means
				you should do one of the following things to improve your
				chances to get a CVS account.
				<simplelist>
					<member>
						Send patches for existing PEAR classes.
					</member>
					<member>
						Create and <emphasis>maintain</emphasis> a new class 
						for PEAR.
					</member>
					<member>
						Rewrite and <emphasis>maintain</emphasis> an existing 
						class to match the <ulink url="http://php.net/manual/pear.standards.php">
						PEAR Coding Standards</ulink>.
					</member>
				</simplelist>
				Requesting an account without having existing source code or 
				public pre-work does not make much sense.
            </para>
			<para>
				See also <ulink url="http://wwww.php.net/cvs-php.php">Using 
				CVS for PHP Development</ulink>.
			</para>
			<para>
				You should announce your intention of commiting new stuff to 
				the PEAR developers list. It's strongly recommended to 
				subscribe to the list. See the
				<ulink url="http://pear.php.net/support.php">support page</ulink>
				for information about subscribing.
			</para>
        </answer>
    </qandaentry>
    
    <qandaentry>
        <question>
            <para>
                How to contribute patches?
            </para>
        </question>
        <answer>
            <author name="Alexander Merz, Tomas V.V. Cox"/>
            <para>
                The best possibility to contribute patches is to send them to the
				PEAR developers list <ulink url="mailto:pear-dev@lists.php.net"
				                            name="pear-dev@lists.php.net"/>. 
                Make sure your patch is based on a current CVS snapshot. Don't send the 
				complete file(s). Use diff or the diff command of cvs and 
				attach the output of diff to the mail.
	        </para>
			<para>
				Another possibility is to send the patches directly to the
				author(s) of the class. But sometimes the author isn't the 
				maintainer, in vacation or has no access to cvs at the 
				moment. So better use the mailinglist.
			</para>
			<para>
				Recommend way for generating patches:
				<simplelist>
					<member>
						<command># cd /cvs/php.net/pear/NET_Ping</command>
					</member>
					<member>
						Retrieve the latest version						
						<command># cvs update</command>
					</member>
					<member>
						Make the modifications you want
						<command># editor Ping.php</command>
					</member>
					<member>
						Check if there have been no modifications while you was modifing
						the file. If there were, re-adapt your patch to this 
						last release.
					</member>
					<member>
						<command># cvs update</command>
					</member>
					<member>
						Generate the patch against the latest version from cvs
						<command># cvs diff -u Ping.php > ping_diff.txt							
						</command>
					</member>
				</simplelist>
			</para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                How to contribute patches for 
                <trademark>Outlook Express</trademark> users
            </para>
        </question>
        <answer>
            <author name="Alexander Merz"/>
            <para>
                The mailing list software accepts only attachments of the 
				content type "text/plain". OE creates the content type of a 
				attachment by checking the file ending. So make sure that the 
				diff output, if stored in a file, the file has an ending, 
				which is assigned to a program like Notepad 
				( plain-text editors ). So better copy&amp;paste the diff 
				output into the mail instead of attaching them, or use another
				email client.
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                I want to contribute, in what areas could I do it?
            </para>
        </question>
        <answer>
            <author name="Alexander Merz"/>
            <para>
                The general directory for new PEAR-classes and moduls is 
				pear/ in the CVS-repository. The name of the directory of the 
				new class is build from the class name and the package name. 
				If you wrote a class called bar as a part of the package foo, 
				the name of the directory is foo_bar. So the resulting path 
				is 	pear/foo_bar.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why is PEAR seperated into pear/ and php4/pear/?
            </para>
        </question>
        <answer>
            <author name="Martin Jansen"/>
            <para>
                The first elements of PEAR were stored in the directory php4/pear
                and so they were bundled with each new PHP release.<break/>
                For future releases of PEAR this isn't workable because PEAR will
                become to big to be bundled with every release of PHP. So there was
                a decision to commit all new elements to an own top level directory
                pear. The other elements which are currently remaining in php4/pear
                will be moved to the new top level directory soon. Only the PEAR
                base classes which are needed by most PEAR elements and the installer
                system will remain in php4/pear and will be bundled with every new
                release automatically.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why differs the directory structure of pear/ and php4/pear/?
            </para>
        </question>
        <answer>
            <author name=""/>
            <para>
                There is no answer yet.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why a flat directory structure instead of a deep?
            </para>
        </question>
        <answer>
            <author name=""/>
            <para>
                There is no answer yet.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Can I commit experimental/unstable stuff?
            </para>
        </question>
        <answer>
            <author name="Alexander Merz"/>
            <para>
                Yes. But make sure, that you mark up the experimental/unstable
                status of the project in the documention. The best place to do 
				this is in the package.xml in the &lt;status&gt;-tag. 
				The values for this tag are 
				<simplelist>
					<member>
						<parameter>alpha</parameter> - first stages of 
						development, all things could change ( API, behavoir) 
						without advice, a lot of bugs are normal
					</member>
					<member>
						<parameter>beta</parameter> - stable API, usable 
						software, bugs are possible
					</member>
					<member>
						<parameter>devel</parameter> - a release intented for 
						developers from outside the core developers of the 
						class who want from other developers to test, give 
						feedback.
					</member>
					<member>
						<parameter>stable</parameter> - the software was tested,
						the API fixed, the documention wrote and is the 
						recommended release for users and production 
						enviroments.
					</member>
					<member>
						<parameter>cvs</parameter> - a cvs snapshot from a 
						certain date
					</member>
				</simplelist>
				( list by Tomas V.V. Cox )
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                Are different packages with similar features allowed?
            </para>
        </question>
        <answer>
            <author name=""/>
            <para>
                There is no answer yet.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                How should I write the documentation?
            </para>
        </question>
        <answer>
            <author name=""/>
            <para>
                There is no answer yet.
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                What is the difference between a package, a class and a file?
            </para>
        </question>
        <answer>
            <author name=""/> <!-- will be Stig Sæther Bakken one time //-->
            <para>
                There is no answer yet.
            </para>
        </answer>
    </qandaentry>        
</qandaset>

</article>

</book>
