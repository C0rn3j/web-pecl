<?xml version='1.0' encoding='ISO-8859-1' ?>
<!-- $Id: pearfaq.xml,v 1.3 2001-08-19 02:34:50 alexmerz Exp $ -->
<!DOCTYPE book PUBLIC "-//Norman Walsh//DTD DocBk XML V1.7//EN"
          "./dbxml/docbookx.dtd">

<book>

<article class="faq">
<artheader>
    <title>PEAR-Developer FAQ</title>
    <date>$Date: 2001-08-19 02:34:50 $</date>
</artheader>

<qandaset>
    <qandaentry>
        <question>
            <para>
                How to become a PEAR contributer and/or CVS access to PEAR?
            </para>
        </question>
        <answer>
            <para>
                ( by Alexander Merz )
            </para>        
            <para>
                The rules are the same like getting a PHP CVS account. This mean
				you should do one of the following things to improve your
				chances to get a CVS account.
				<simplelist>
					<member>
						Send patches for existing PEAR classes.
					</member>
					<member>
						Create and <emphasis>maintain</emphasis> a new class 
						for PEAR.
					</member>
					<member>
						Rewrite and <emphasis>maintain</emphasis> an existing 
						class to match the PEAR Coding Standards.
					</member>
				</simplelist>
				Requesting an account without having existing source code or 
				public pre-work make no much sense.
            </para>
			<para>
				See also <ulink url="http://wwww.php.net/cvs-php.html">Using 
				CVS for PHP Development</ulink>.
			</para>
			<para>
				You should announce your intention of commiting new stuff to 
				the PEAR-Dev Mailinglist. It's strongly recommended to 
				subscribe to the list. See the
				<ulink url="http://www.php.net/support.php">support page
				</ulink> for subscribing.
			</para>
        </answer>
    </qandaentry>
    
    <qandaentry>
        <question>
            <para>
                How to contribute patches?
            </para>
        </question>
        <answer>
            <para>
                ( by Alexander Merz )
            </para>        
            <para>
                The best possibility to contribute patches is to send them to 
				PEAR-Dev mailinglist pear-dev@lists.php.net. Make sure your 
				patch is based on a current CVS snapshot. Don't send the 
				complete file(s). Use diff or the diff command of cvs and 
				put or attach the output of diff to the mail.
	        </para>
			<para>
				Another possibility is to send the patches directly to the
				author(s) of the class. But sometimes the author isn't the 
				maintainer, in vacation or have not access to cvs at the 
				moment. So better use the mailinglist
			</para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                How to contribute patches for 
                <trademark>Outlook Express</trademark> users
            </para>
        </question>
        <answer>
            <para>
                ( by Alexander Merz )
            </para>        
            <para>
                The mailing list software accepts only attachments of the 
				content type "text/plain". OE creates the content type of a 
				attachment by checking the file ending. So make sure that the 
				diff output, if stored in a file, the file has an ending, 
				which is assigned to a program like Notepad 
				( plain-text editors ). So better copy&amp;paste the diff 
				output into the mail isnstead of attaching them, or use another
				email client.
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                I want to contribute, in what areas could I do it?
            </para>
        </question>
        <answer>
            <para>
                ( by Alexander Merz )
            </para>        
            <para>
                The general directory for new PEAR-classes and moduls is 
				pear/ in the CVS-repository. The name of the directory of the 
				new class is build from the class name and the package name. 
				If you wrote a class called bar as a part of the package foo, 
				the name of the directory is foo_bar. So the resulting path 
				is 	pear/foo_bar.
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why is PEAR seperated into pear/ and php4/pear/?
            </para>
        </question>
        <answer>
            <para>
                ( by Author )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why differs the directory structure of pear/ and php4/pear/?
            </para>
        </question>
        <answer>
            <para>
                ( by Author )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Why a flat directory structure instead of a deep?
            </para>
        </question>
        <answer>
            <para>
                ( by Author )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                Can I commit experimental/ unstable stuff?
            </para>
        </question>
        <answer>
            <para>
                ( by Alexander Merz )
            </para>        
            <para>
                Yes. But make sure, that you mark up the experimental/ unstable
                status of the project in the documention. The best place to do 
				this is in the package.xml in the &lt;status&gt;-tag. 
				The values for this tag are 
				<simplelist>
					<member>
						<parameter>alpha</parameter> - first stages of 
						development, all things could change ( API, behavoir) 
						without advice, a lot of bugs are normal
					</member>
					<member>
						<parameter>beta</parameter> - stable API, usable 
						software, bugs are possible
					</member>
					<member>
						<parameter>devel</parameter> - a release intented for 
						developers from outside the core developers of the 
						class who want from other developers to test, give 
						feedback.
					</member>
					<member>
						<parameter>stable</parameter> - the software was tested,
						the API fixed, the documention wrote and is the 
						recommended release for users and production 
						enviroments.
					</member>
					<member>
						<parameter>cvs</parameter> - a cvs snapshot from a 
						certain date
				</simplelist>
				( list by Tomas V.V. Cox )
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                Are different packages with similar features allowed?
            </para>
        </question>
        <answer>
            <para>
                ( by Author )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>    
    <qandaentry>
        <question>
            <para>
                How should I write the documentation?
            </para>
        </question>
        <answer>
            <para>
                ( by Author )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>
    <qandaentry>
        <question>
            <para>
                What is the difference between a package, a class and a file?
            </para>
        </question>
        <answer>
            <para>
                ( by Stig Sæther Bakken )
            </para>        
            <para>
                the ANSWER is 42
            </para>
        </answer>
    </qandaentry>        
</qandaset>

</article>

</book>
