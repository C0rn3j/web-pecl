SHORT TERM:

* web site:
** release-info page
** move dependencies from package-info to release-info
** fix release-upload bug

* "pear configure" to make ~/.pearrc:
** email address
** any client-side parameters

* "pear prepare"
** client side: fetch package information from server, combine with
   filelist.xml and generate package.xml
** server side: using package.info method

* xmlrpc server methods
** package.alter
** package.annotate
** release.list
** release.get
** release.annotate
** release.notes

* "pear" script:
** windows support:
*** System class and Tar.php test under win
*** xmlrpc extension compile fix

* feature for installing "application" or "app" files in a web server
  document root directory, set up virtual hosts etc.

* registry files should say when the package was installed

* fix package download logging

MEDIUM TERM:

* "pear upload"
** client side: implement xml-rpc client

* add a "live_defaults" config layer where default values
  are retrieved from the central database and updated regularly
* each class file could document its own dependencies, for example:
    @dep php > 4.0.4pl1
    @dep ext pcre
    @dep prog imagick

* script to include PEAR stuff in PHP releases

* integrate some bug reporting system

LONG TERM:

* prepare for ZendEngine2 / PHP 5
